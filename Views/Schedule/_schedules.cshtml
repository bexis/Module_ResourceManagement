@using Telerik.Web.Mvc.UI

@using BExIS.Web.Shell.Areas.RBM.Models.Booking;
@using BExIS.Web.Shell.Areas.RBM.Models.ResourceStructure;
@using System.Text;

@model List<ScheduleEventModel>

@Html.ValidationSummary(true)

@for(int i = 0; i < Model.Count(); i++)
    {
<div class="item " style="padding-top: 5px;">
    @{string color = "";
        if (Model[i].ScheduleError)
        {
            color = "background-color: #F24C24;";
        }
        else
        {
            color = "background-color: #d2e8e3;";
        }
    }
    <div class="itemHeader" style="border: 1px solid black; padding:10px; @color " onclick="Toogle(@Model[i].Index)" title="Click here to open the schedule">

        @Html.HiddenFor(m => m[i].Index)
        @Html.HiddenFor(m => m[i].ResourceId)
        <span id="@Model[i].Index" class="bx fa-angle-double-right"></span>
       
                <b>@Html.DisplayFor(m => m[i].ResourceName)</b>
                
                <div style="float:right; padding-right:15px; margin-top: -4px;">
                   @* @if (Model[i].ResourceQuantity > 0)
                    {
                    <small>Max. Number: @Html.DisplayFor(m => m[i].ResourceQuantity)</small>
                    } *@
                     @if ((Model[i].EditMode && Model[i].EditAccess) || Model[i].EventId == 0)
                    {
                        <span class="bx bx-grid-function bx-trash" id="" onclick="RemoveScheduleFromEvent(@Model[i].Index)" title="Remove schedule from event"></span><br />
                    }

                </div>  
               
           
    </div>
    <div class="itemContent" id="scheduleDetails_@Model[i].Index" style="display: none; border-left:2px solid black; border-right:2px solid black; border-bottom:2px solid black;">
        <table style="width:100%;">
            <tr>
                <td colspan="4" style="width:200px">
                    <div id="timePeriod_@Model[i].Index"></div>

                </td>
                <td>
                    <small>@Html.ValidationMessage("DateMismatch_" + Model[i].Index.ToString())</small><br />
                    <small>@Html.ValidationMessage("DurationError_" + Model[i].Index.ToString())</small><br />
                </td>
                <td rowspan="6" style="text-align: right">
                    @if ((Model[i].EditMode && Model[i].EditAccess) || Model[i].EventId == 0)
                    {
                    <div class="controlPanel">
                        <div> Copy filled values to all other  <span id="TT_@Model[i].ResourceId" class="bx bx-grid-function fa-reply-all" onclick="useValuesForAll(@Model[i].Index)" title="Use filled values for all other schedules"></span></div>
                        @*<div> Check availability  <span id="availability_@Model[i].ResourceId@Model[i].Index" class="bx bx-grid-function fa-calendar-o" onclick="OnClickCheckAvailability(@Model[i].Index,@Model[i].ResourceId)" title="Check availability for the defined time period and quantity"></span> </div>*@
                        <div> Show further resources  <span id="TT_@Model[i].ResourceId" class="bx bx-grid-function fa-filter" onclick="OnClickShowSimilar(@Model[i].Index,@Model[i].ResourceId)" title="Show further resources"></span></div>
                        <div> Copy whole resource  <span id="@Model[i].ResourceId" class="bx bx-grid-function fa-copy" onclick="OnClickCopy(@Model[i].Index, @Model[i].EventId)" title="Copy the whole resource schedule"></span></div>
                    </div>
                    }
                </td>
            </tr>
            <tr>
                <td style="width:200px"><b>Reserved for</b></td>
                <td>
                    @if ((Model[i].EditMode && Model[i].EditAccess) || Model[i].EventId == 0)
                    {
                        <span class="bx-grid-function fa-user-plus" onclick="OnClickChooseForPerson(@Model[i].Index)" title="Select one or more person(s) for whom you want to reserve"></span>
                    }

                </td>
                <td style="width:200px" colspan="2">
                    <div id="users_@Model[i].Index"></div>
                </td>
                <td>
                    <small>@Html.ValidationMessage("UserMissing_" + Model[i].Index.ToString())</small>
                    <small>@Html.ValidationMessage("ContactMissing_" + Model[i].Index.ToString())</small>
                </td>
            </tr>
            @*     <tr>
                    <td><b>Contact Person</b></td>
                    <td>@Html.DisplayFor(m=>m[i].ContactName)</td>
                </tr>*@
            <tr>
                <td>
                    <b>Reserved by</b>
                </td>
                <td>
                    @Html.DisplayFor(m => m[i].ByPerson)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m[i].ScheduleQuantity) 
                        @if (Model[i].ResourceQuantity > 0)
                        {
                            <span>(max. @Model[i].ResourceQuantity)</span>
                        }
                </td>
                <td>
                    @if (Model[i].ResourceQuantity != 0)
                    {
                        if ((Model[i].EditMode && Model[i].EditAccess) || Model[i].EventId == 0)
                        {
                            //@Html.TextBoxFor(m => m[i].ScheduleQuantity, new { OnChange = "onChangeControl(this)", @Name = "Quantity_" + @Model[i].Index.ToString(), @style = "width: 30px" })
                            var ScheduleQuantity = Model[i].ScheduleQuantity;
                            if (@Model[i].ScheduleQuantity == 0)
                            {
                                ScheduleQuantity = 1; // allways selct one by default
                            }   
                            <input name="Quantity_@Model[i].Index.ToString()" onchange="onChangeControl(this)" data-val="true" data-val-number="The field Number must be a number." data-val-required="The Number field is required." style="width: 30px" type="text" value="@ScheduleQuantity">
                        }
                        else
                        {
                            @Model[i].ScheduleQuantity;
                        }
                    }
                    else
                    {
                        <p>no limitation</p>
                    }
                </td>
                <td></td>
                <td></td>
                <td>
                    <small>@Html.ValidationMessage("Quantity_" + Model[i].Index.ToString())</small>
                </td>
            </tr>
            <td colspan="3">
            @if(Model[i].ResourceQuantity > 0  && Model[i].ResourceName.Contains("Sleeping")){ 
                <span>Please note, that sleepling places should be booked separate (one by one) within a booking with a maximum number of 1. You can use  <span class="bx bx-grid-function fa-copy" onclick="OnClickCopy(@Model[i].Index, @Model[i].EventId)" title="Copy the whole resource schedule"></span> to copy this resource multiple times.</span> 
                }
            </td>
            <tr>

            </tr>


            @if (Model[i].WithActivity)
            {
                <tr>
                    <td>
                        <b>Reason</b>
                    </td>
                    <td>
                        @if ((Model[i].EditMode && Model[i].EditAccess) || Model[i].EventId == 0)
                        {
                            <span class="bx-grid-function fa-plus" onclick="OnClickChooseActivity(@Model[i].Index)" title="Give a predefined reason why you are booking this resource."></span>
                        }
                    </td>

                    <td colspan="2">
                        <div id="activities_@Model[i].Index"></div>
                    </td>
                    <td>
                        <small>@Html.ValidationMessage("ActivityMissing_" + Model[i].Index.ToString())</small>
                    </td>
                </tr>
            }
            @if (Model[i].ResourceHasFiles)
            {
                for (int j = 0; j < Model[i].Files.Count(); j++)
                {
                    <tr colspan="2">
                        <td><b>@Model[i].Files[j].AttributeName</b></td>
                        <td>
                            @Html.ActionLink(@Model[i].Files[j].Name, "DownloadFile", "Schedule", new { id = @Model[i].Files[j].Id }, null)
                        @if ((@Model[i].Files[j].NeedConfirmation && Model[i].EditMode) || (@Model[i].Files[j].NeedConfirmation && Model[i].EventId == 0))
                        {
                            <br /><br />@Html.CheckBoxFor(m => m[i].FileConfirmation, new { @Name = "FileConfirmation_" + @Model[i].ResourceId, @OnChange = "OnChangeFileConfirmation(this)" }) <span>I read the file(s)</span>
                        }
                    </td>
                    <td></td>
                    <td></td>
                    <td>
                        <small>@Html.ValidationMessage("FileConfirmation_" + Model[i].Index.ToString())</small>
                    </td>
                </tr>

            }
        }
            <tr>
                <td colspan="5">
                    <small>@Html.ValidationMessage("DependencyConstraint_" + Model[i].Index.ToString())</small><br />
                    <small>@Html.ValidationMessage("QuantityConstraint_" + Model[i].Index.ToString())</small><br />
                    <small>@Html.ValidationMessage("BlockingConstraint_" + Model[i].Index.ToString())</small>
                </td>
            </tr>
        </table>
    </div>
    @*<div>
            <br />
        </div>*@
</div>

    }
    
<script type="text/javascript">
   
</script>

